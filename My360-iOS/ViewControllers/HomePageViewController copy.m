//
//  HomePageViewController.m
//  MSPatient
//
//  Generated by AnyPresence, Inc on 2013-02-26
//  Copyright (c) 2013. All rights reserved.
//

#import "HomePageViewController.h"
#import <APSDK/AuthManager.h>
#import <APSDK/User.h>
#import "AuthManager+Rules.h"
#import "UIView+APViewExtensions.h"
#import "UIViewController+UI.h"
#import "UIColor+APColorExtension.h"
#import "ClinicianListPageViewController.h"
#import <APSDK/Setting+Remote.h>
#import "PikConstants.h"
#import "ConfigurationManager.h"

#define ASSET_BY_SCREEN_HEIGHT(regular, longScreen) (([[UIScreen mainScreen] bounds].size.height <= 480.0) ? regular : longScreen)

#define EMERGENCY_NUMBER @"911"

#define IS_WIDESCREEN ( fabs( ( double )[ [ UIScreen mainScreen ] bounds ].size.height - ( double )568 ) < DBL_EPSILON )

@interface HomePageViewController () 

@property (nonatomic, weak) IBOutlet UIScrollView * scrollView;
@property (nonatomic, assign) BOOL observersSet;
@property (nonatomic, weak) IBOutlet UIButton * treatmentsButtonButton;
@property (nonatomic, weak) IBOutlet UIButton * exacerbationsButtonButton;
@property (nonatomic, weak) IBOutlet UIButton * sideEffectsButtonButton;
@property (nonatomic, weak) IBOutlet UIButton * labResultsButtonButton;
@property (nonatomic, weak) IBOutlet UIButton * journalButtonButton;
@property (nonatomic, weak) IBOutlet UIButton * medicalHistoryButtonButton;
@property (nonatomic, weak) IBOutlet UIButton * educationButtonButton;
@property (nonatomic, weak) IBOutlet UIButton * alertsButtonButton;
@property (nonatomic, weak) IBOutlet UIButton * callEmergencyNumberButton;
@property (strong, nonatomic) UIView *menuBackground;
@property (strong, nonatomic) IBOutlet UIView *contentView;



- (IBAction)treatmentsButtonTapped;
- (IBAction)exacerbationsButtonTapped;
- (IBAction)sideEffectsButtonTapped;
- (IBAction)labResultsButtonTapped;
- (IBAction)journalButtonTapped;
- (IBAction)medicalHistoryButtonTapped;
- (IBAction)alertsButtonTapped;
- (IBAction)educationButtonTapped;
- (IBAction)clinicianButtonTapped;
- (IBAction)menuTapped;
@end

@implementation HomePageViewController

@synthesize notificationAlert;
@synthesize callEmergencyNumberButton;

#pragma mark - Actions

- (IBAction)treatmentsButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"TreatmentListPage"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowTreatmentListPageViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
}

- (IBAction)exacerbationsButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"ExacerbationsList"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowExacerbationsListViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
}

- (IBAction)sideEffectsButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"SideEffectList"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowSideEffectListViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
}

- (IBAction)labResultsButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"LabResultsList"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowLabResultsListViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
}

- (IBAction)journalButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"JournalList"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowJournalListViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
}

- (IBAction)medicalHistoryButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"MedicalHistoryPage"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowMedicalHistoryPageViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
}


- (IBAction)alertsButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"AlertsPageList"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowAlertsPageViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
    
    self.notificationAlert.hidden = YES;
    [self.notificationAlert removeFromSuperview];
    self.notificationAlert = nil;
    
    
    UIApplication* app = [UIApplication sharedApplication];
    app.applicationIconBadgeNumber = 0;

}


- (IBAction)educationButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"EducationPageList"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowEducationPageViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
}

- (IBAction)clinicianButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"ClinicianPageList"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowClinicianPageViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
}

- (IBAction)profileButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"ProfilePage"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowProfilePageViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
}


- (IBAction)glucoseButtonTapped {
    UIViewController * controller = [self.storyboard instantiateViewControllerWithIdentifier:@"GlucosePage"];
    if ([[AuthManager defaultManager] isAuthorized:controller]) {
        [self performSegueWithIdentifier:@"ShowGlucosePageViewController" sender:self];
    } else {
        [self showMessage:@"Unauthorized"];
    }
}


- (void)logoutSelected:(NSNotification *) notification
{

    if ([[notification name] isEqualToString:@"selectedLogout"]){

        [[NSNotificationCenter defaultCenter] removeObserver:self name:@"selectedLogout" object:nil];
       //go all the way back to the login view
        [self.navigationController popToRootViewControllerAnimated:YES];
        
    }
}


- (IBAction)logoutButtonTapped {
    
    [self.navigationController popToRootViewControllerAnimated:YES];
}


- (IBAction)cancelButtonTapped {
    
    self.menuBackground.hidden = YES;
}


-(IBAction)menuTapped {
    
    [self performSegueWithIdentifier:@"ShowMenuPageViewController" sender:self];

    //listen for logout messages
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(logoutSelected:) name:@"selectedLogout" object:nil];

}


- (void)notificationRecieved:(NSNotification *) notification
{
    if ([[notification name] isEqualToString:@"recievedRemoteNotification"]){
        UIApplication* app = [UIApplication sharedApplication];
        [self setAlertTabBadge:app.applicationIconBadgeNumber];
    }
}

-(void)setAlertTabBadge:(int)badgeNum{
    if (badgeNum > 0)
        [[[[[self tabBarController] tabBar] items]objectAtIndex:1] setBadgeValue:[NSString stringWithFormat:@"%d",badgeNum]];
    else
        [[[[[self tabBarController] tabBar] items]objectAtIndex:1] setBadgeValue:nil];
}


#pragma mark - UIViewController

- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    
    if ([segue.identifier isEqualToString:@"ShowMenuPageViewController"]) {

        ((UIViewController *)segue.destinationViewController).modalTransitionStyle = UIModalTransitionStyleCoverVertical;
    }
    else if ([segue.identifier isEqualToString:@"ShowClinicianPageViewController"]) {
        //edit mode means that the user can enable/disable access to the data by the clinician
        ((ClinicianListPageViewController *)segue.destinationViewController).editMode = YES;

    }
}

- (UIStatusBarStyle)preferredStatusBarStyle
{
    return UIStatusBarStyleLightContent;
}



#pragma mark - AlertView delegate
-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    
    switch (alertView.tag) {
        case 1:{
            if(buttonIndex == 1){
                [self menuTapped];
            }
            break;
        }
        case 2:
        {
            if(buttonIndex == 0){
                [[UIApplication sharedApplication] openURL:[NSURL URLWithString:[@"tel:" stringByAppendingString:EMERGENCY_NUMBER]]];
            }
        }
        default:
            break;
    }
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.contentView.frame = self.view.bounds;
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(notificationRecieved:) name:@"recievedRemoteNotification" object:nil];
    /*[[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(restoreFromBackground:)
                                                 name:UIApplicationDidBecomeActiveNotification
                                               object:nil];*/
    

    
    //create the custom title area
    if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad || [[[UIDevice currentDevice] model] hasPrefix: @"iPad"]) { self.callEmergencyNumberButton.hidden = TRUE; }
    
    UIImageView *iconImage = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"my360Logo82.png"]];
    
    UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(20, 8, 280, 15)];
    titleLabel.backgroundColor = [UIColor clearColor];
    titleLabel.font = [UIFont systemFontOfSize: 14.0f];
    titleLabel.shadowColor = [UIColor colorWithWhite:0.0 alpha:0.5];
    titleLabel.textAlignment = NSTextAlignmentCenter;
    titleLabel.textColor = [UIColor whiteColor];
    
    if ([[[ConfigurationManager sharedManager] appID] integerValue] == MS) {
        titleLabel.text = @"My MS Manager";
        
    }
    else if ([[[ConfigurationManager sharedManager] appID] integerValue] == Diabetes) {
        titleLabel.text = @"Managing My Diabetes";
        
    }
    else if ([[[ConfigurationManager sharedManager] appID] integerValue] == COPD) {
        titleLabel.text = @"Managing My COPD";
        
    }
    else if ([[[ConfigurationManager sharedManager] appID] integerValue] == MM) {
        titleLabel.text = @"Managing My MM";
        
    }
    else if ([[[ConfigurationManager sharedManager] appID] integerValue] == RA) {
        titleLabel.text = @"Managing My RA"; //My RA
        
    }
    else if ([[[ConfigurationManager sharedManager] appID] integerValue] == HepC) {
        titleLabel.text = @"Managing My Hep C"; //My RA
    }
    else if ([[[ConfigurationManager sharedManager] appID] integerValue] == PD) {
        titleLabel.text = @"Managing My PD";
    }
    else if ([[[ConfigurationManager sharedManager] appID] integerValue] == IPF) {
        titleLabel.text = @"Managing My IPF";
    }
    else if ([[[ConfigurationManager sharedManager] appID] integerValue] == Asthma) {
        titleLabel.text = @"Managing My Asthma";
    }
    else if ([[[ConfigurationManager sharedManager] appID] integerValue] == AAPA) {
        titleLabel.numberOfLines=2;
        titleLabel.text = @"Managing My Asthma";
         iconImage = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"Icon-29.png"]];
    }
    
    else {
        titleLabel.text = @"Managing My MS";
        
    }
    
    UILabel *subjectLabel = [[UILabel alloc] initWithFrame:CGRectMake(20, 22, 280, 15)];
    subjectLabel.backgroundColor = [UIColor clearColor];
    subjectLabel.font = [UIFont systemFontOfSize: 14.0f];
    subjectLabel.shadowColor = [UIColor colorWithWhite:0.0 alpha:0.5];
    subjectLabel.textAlignment = NSTextAlignmentCenter;
    subjectLabel.textColor = [UIColor whiteColor];
     
    if ([[[ConfigurationManager sharedManager] appID] integerValue] == AAPA) {
        
        subjectLabel.text = @"with My Physician";
    }
    
    

    UIView *titleView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 300, 44)];
    [titleView addSubview:iconImage];
    [titleView addSubview:titleLabel];
    [titleView addSubview:subjectLabel];
    
    self.navigationItem.titleView = titleView;
    
    self.notificationAlert = nil;

    //we do not want to go back to the login or password change view
    self.navigationItem.hidesBackButton = YES;
    
    //subsequent views will have the back button say Home
    self.navigationItem.backBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"Home" style:UIBarButtonItemStyleBordered target:nil  action:nil];
    
    self.contentView.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:ASSET_BY_SCREEN_HEIGHT(@"Background",@"Background-568h")]];

    if([((User *)[AuthManager defaultManager].currentCredentials).logInCounter isEqual: @1]){
        //First Log In
        
        NSDictionary *params = [[NSDictionary alloc]initWithObjects:[NSArray arrayWithObjects:[[ConfigurationManager sharedManager] appID], nil] forKeys:[NSArray arrayWithObjects:@"app_id", nil]];
        [Setting exactMatchWithParams:params offset:0 limit:10 async:^(NSArray *objects, NSError *error) {
            Setting *globals;
            for (Setting *stg in objects)
                if (!error) {
                    if ([objects count] > 0) {
                        globals = [objects objectAtIndex:0]; // there should only be one
                        
                        if(globals.contactEmergeServicesMsg != nil && (![globals.contactEmergeServicesMsg isEqualToString:@""])){
                            UIAlertView *alert = [[UIAlertView alloc]init];
                            alert.title = @"Warning";
                            alert.message = globals.contactEmergeServicesMsg;
                            alert.delegate = self;
                            alert.tag = 3;
                            [alert addButtonWithTitle:@"OK"];
                            [alert setTag:1];
                            [alert show];
                        }
                        /*if(globals.firstLoginReminder != nil && (![globals.firstLoginReminder isEqualToString:@""])){
                            UIAlertView *alert = [[UIAlertView alloc]init];
                            alert.title = @"Thanks!";
                            alert.message = globals.firstLoginReminder;
                            alert.delegate = self;
                            alert.tag = 1;
                            [alert addButtonWithTitle:@"No, thanks"];
                            [alert addButtonWithTitle:@"Go to settings"];
                            [alert setCancelButtonIndex:0];
                            [alert setTag:1];
                            [alert show];
                        }*/
                        CGRect frame = self.view.bounds;
                        TutorialView *tutorialView = [[TutorialView alloc]initWithFrame:frame];
                        
                        UILabel *newLabel = [[UILabel alloc]initWithFrame:CGRectMake(30, 200, 300, 40)];
                        newLabel.text = @"Step 2: Add Treatments";
                        newLabel.backgroundColor = [UIColor clearColor];
                        newLabel.textColor = [UIColor whiteColor];
                        [tutorialView addSubview:newLabel];
                        
                        Arrow *newArrow = [[Arrow alloc]init];
                        newArrow.head = CGPointMake(50, 80);
                        newArrow.tail = CGPointMake(50, 200);
                        [tutorialView addArrow:newArrow];
                        
                        
                        newLabel = [[UILabel alloc]initWithFrame:CGRectMake(100, 145, 300, 40)];
                        newLabel.text = @"Step 1: Change Settings";
                        newLabel.backgroundColor = [UIColor clearColor];
                        newLabel.textColor = [UIColor whiteColor];
                        [tutorialView addSubview:newLabel];
                        
                        newArrow = [[Arrow alloc]init];
                        newArrow.head = CGPointMake(300, 5);
                        newArrow.tail = CGPointMake(200, 150);
                        [tutorialView addArrow:newArrow];
                        
                        
                        newLabel = [[UILabel alloc]initWithFrame:CGRectMake(30, 250, 300, 40)];
                        newLabel.text = @"Step 3: Connect with your Physician";
                        newLabel.backgroundColor = [UIColor clearColor];
                        newLabel.textColor = [UIColor whiteColor];
                        [tutorialView addSubview:newLabel];
                        
                        newArrow = [[Arrow alloc]init];
                        newArrow.head = CGPointMake(300, 350);
                        newArrow.tail = CGPointMake(230, 290);
                        [tutorialView addArrow:newArrow];
                        
                        [self.view addSubview:tutorialView];
                        
                        [[NSUserDefaults standardUserDefaults]setBool:YES forKey:@"hasShownTreatmentTutorial"];
                        [[NSUserDefaults standardUserDefaults]synchronize];
                    }
                }
        }];
    }
    AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    //Sanity Check and Primary File Install
    if(![ad referenceFilesExist]){
        [ad copyDefaultReferenceData];
    }
    [ad checkAndUpdateReferenceData];
    [ad loadAllReferenceData];
}

-(void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
}

-(IBAction)makeEmergencyCall:(id)sender {
    
    UIAlertView *alert = [[UIAlertView alloc]init];
    alert.title = @"Call 911";
    alert.tag = 2;
    alert.message = @"Are you sure?";
    [alert addButtonWithTitle:@"Yes"];
    [alert addButtonWithTitle:@"No"];
    alert.delegate = self;
    [alert show];
}

- (void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];
    
}

-(void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"selectedLogout" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIApplicationDidBecomeActiveNotification object:nil];
}




@end
