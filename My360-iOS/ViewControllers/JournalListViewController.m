//
//  JournalListViewController.m
//  MSPatient
//
//  Generated by AnyPresence, Inc on 2013-02-26
//  Copyright (c) 2013. All rights reserved.
//

#import <APSDK/AuthManager.h>
#import <APSDK/PatientJournal+Remote.h>
#import <APSDK/User.h>
#import <APSDK/Symptom.h>
#import "AuthManager+Rules.h"
//#import "EditJournalResultPageViewController.h"
#import "JournalListViewController.h"
#import "LoadingTableViewCell.h"
#import "UIView+APViewExtensions.h"
#import "UIViewController+UI.h"
#import "JournalCell.h"
#import <APSDK/APObject+Remote.h>
#import <APSDK/APObject+RemoteRelationships.h>
#import "PikConstants.h"
//#import "FatigueDetailTableViewController.h"




@interface JournalListViewController () 

@property (nonatomic, weak) IBOutlet UIBarButtonItem * addJournalButtonBarButtonItem;

- (IBAction)addJournalButtonTapped;
- (void)reloadJournalListDataAnimated:(BOOL)animated;

@end

@implementation JournalListViewController

@synthesize reloadDataOnLoad;


#pragma mark - Actions

- (IBAction)addJournalButtonTapped
{
    [self.toolBar showHideToolBarInView:self.view animated:YES];
    if(self.toolBar.hidden) [self.tableView setEditing:NO animated:YES];
}

-(void)toolBarAdd{
    [self performSegueWithIdentifier:@"ShowAddJournalPageViewController" sender:self];
    [self.toolBar hideToolBarInView:self.view animated:NO];
    [self.tableView setEditing:NO animated:YES];
    [self.tutorialView dismissViewAnimated:NO completion:nil];
}
-(void)toolBarDelete{
    [self.tableView setEditing:!self.tableView.editing animated:YES];
}

#pragma mark - Private

- (void)reloadJournalListDataAnimated:(BOOL)animated {
    
    if ([AppDelegate hasConnectivity])
    {
  
        [self pushBusyOperation];
        
        if (reloadDataOnLoad){
            [self.tableData removeAllObjects];
            [self.tableView reloadData];
        }
        __block NSArray *history = [self.tableData copy];
       [PatientJournal query:@"my_unarchived_journals" params:nil offset:self.tableData.count limit:kListLength async:^(NSArray * objects, NSError * error) {
            if (self.navigationController.topViewController == self) {
            self.listDataState = kDataStateReady;
            if (error) {
                [self popBusyOperation];
                if(ERROR_CODE_401(error)) {
                    AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication] delegate];
                    [app showSessionTerminatedAlert];
                }
                else [self showMessage:[error localizedDescription] ? : @"Error"];
           } else {
                   [self.tableData removeAllObjects];
                   [self.tableData addObjectsFromArray:history];
                   [self.tableData addObjectsFromArray:objects];
                   if (objects.count > kListLength - 1) {
                       [self.tableData removeLastObject];
                   } else {
                       self.listDataState = kDataStateFull;
                   }
                       [self.tableView reloadData];
//            - ios cleanup svaz 1/12/15
//                       [self resize:self.tableView
//                                 to:CGSizeMake(CGRectGetWidth(self.tableView.frame),
//                                               self.tableData.count * self.tableView.rowHeight +
//                                               (self.listDataState == kDataStateFull ? 0 : self.tableView.rowHeight))
//                           animated:animated];
//            - ios cleanup svaz 1/12/15  -end
               
                       [self popBusyOperation];
                       
                       if(!HAS_DATA){
                           [self.toolBar showToolBarInView:self.view animated:NO];
                           CGRect frame = self.view.bounds;
                           frame.origin.y += self.toolBar.frame.size.height;
                           //   HIDE TUTORIAL FOR IPAD         -  MSAA cleanup svaz 11/27/14
                           int tutorialX = 0;
                           if (IS_IPAD) {
                               tutorialX =+150;
                           }
                           
                           
                               self.tutorialView = [[TutorialView alloc]initWithFrame:frame];
                               [self.view addSubview:self.tutorialView];
                               
                               UILabel *newLabel = [[UILabel alloc]initWithFrame:CGRectMake(30+tutorialX, 200, 300, 40)];
                               newLabel.text = @"Tap to start adding journals";
                               newLabel.backgroundColor = [UIColor clearColor];
                               newLabel.textColor = [UIColor whiteColor];
                               [self.tutorialView addSubview:newLabel];
                               
                               Arrow *newArrow = [[Arrow alloc]init];
                               newArrow.head = CGPointMake(105+tutorialX, 5);
                               newArrow.tail = CGPointMake(105+tutorialX, 200);
                               [self.tutorialView addArrow:newArrow];
                            
                           
                       }

           }
            } else [self popBusyOperation];
       }];
    }
    else
    {
        [AppDelegate showNoConnecttivityAlert];
    }
    
}


#pragma mark - UITableViewDataSource

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView == self.tableView) {
        if (indexPath.section == 1) {
            LoadingTableViewCell * cell = (LoadingTableViewCell *)[tableView dequeueReusableCellWithIdentifier:@"Loading"];
            
            if (self.listDataState == kDataStateLoading) {
                cell.state = kLoadingTableViewCellStateBusy;
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
            } else {
                cell.state = kLoadingTableViewCellStateReady;
                cell.selectionStyle = UITableViewCellSelectionStyleGray;
            }
            
            return cell;
        }
        else {
            
            JournalCell * cell = [tableView dequeueReusableCellWithIdentifier:@"Default"];
            PatientJournal * object = [self.tableData objectAtIndex:indexPath.row];
            NSString *dateString = [[self dateFormatterWithTimeZone:[NSTimeZone timeZoneWithAbbreviation:@"UTC"]] stringFromDate:object.journalOn];
            
            cell.dateLabel.text =  dateString;
            cell.contentLabel.text = [NSString stringWithFormat:@"My Mood: %@", object.moodDenormalized];
            cell.secondaryLabel.text = [NSString stringWithFormat:@"My Day Rating: %@",[object.dayRating stringValue]];
            cell.selectionStyle = UITableViewCellSelectionStyleGray;
            cell.accessoryType =  UITableViewCellAccessoryDisclosureIndicator;
            
            return cell;
        }
    }
    
    return nil;
}



#pragma mark - UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if (tableView == self.tableView) {
        if (indexPath.section == 1 && self.listDataState == kDataStateReady) {
            ((LoadingTableViewCell *)[tableView cellForRowAtIndexPath:indexPath]).state = kLoadingTableViewCellStateBusy;
            [tableView deselectRowAtIndexPath:indexPath animated:YES];
            
            self.listDataState = kDataStateLoading;
            [self reloadJournalListDataAnimated:YES];
        }
        else {
            
            [self performSegueWithIdentifier:@"ShowEditJournalPageViewController" sender:[self.tableData objectAtIndex:indexPath.row]];
        }
    }
}


- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        
        
        if ([AppDelegate hasConnectivity])
        {
            PatientJournal * patienjournal = [self.tableData objectAtIndex:indexPath.row];
            
            
            patienjournal.archived = @1;
            [self pushBusyOperation];
            __unsafe_unretained JournalListViewController * _self = self;
            
            [patienjournal updateAsync:^(id obj, NSError * error) {
                if (error) {
                    [_self popBusyOperation];
                    if(ERROR_CODE_401(error)) {
                        AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication] delegate];
                        [app showSessionTerminatedAlert];
                    }
                    else [_self showMessage:@"Treatment record failed to delete."];
                } else {
                    [_self popBusyOperation];
                    
                    //[_self showMessage:@"Treatment record successfully deleted."];
                    [_self.tableData removeAllObjects];
                    [_self reloadJournalListDataAnimated:NO];
                }
            }];
        }
        else
        {
            [AppDelegate showNoConnecttivityAlert];
        }
    }
}

- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView
           editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return UITableViewCellEditingStyleDelete;
}


- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    return 60;
}


#pragma mark - UIViewController

- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    if ([segue.identifier isEqualToString:@"ShowEditJournalPageViewController"]) {
        ((EditJournalResultPageViewController *)segue.destinationViewController).patientJournal = sender;
        ((EditJournalResultPageViewController *)segue.destinationViewController).editMode = YES;
        ((EditJournalResultPageViewController *)segue.destinationViewController).delegate = self;
    }
    else if ([segue.identifier isEqualToString:@"ShowAddJournalPageViewController"]) {
        EditJournalResultPageViewController *controller = (EditJournalResultPageViewController *)[((UINavigationController *)segue.destinationViewController).viewControllers objectAtIndex:0];
        controller.editMode = NO;
        controller.delegate = self;
    }
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    self.reloadDataOnLoad = YES;
    self.navigationItem.title = [AppDelegate interpolateString:NSLocalizedString(@"My Journal", @"My Journal")];
    
    //[self loadMoodData];
    //[self loadSymptomData];
    //[self loadAbilityData];
    
    //            -  iPad cleanup rvera 4/27/14
    self.tableView.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;
    self.tableView.frame = self.view.bounds;
    //        end     -  iPad cleanup rvera 4/27/14

}


- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self addObservers];

    if(reloadDataOnLoad)
    {
        //[self refreshAnimated:animated];
        [self reloadJournalListDataAnimated:animated];
        self.reloadDataOnLoad = NO;

    }
}


#pragma mark - Data

-(void)userInteractedWithViewController:(EditJournalResultPageViewController *)controller{
    self.reloadDataOnLoad = YES;
}
-(void)back {
    [super back];
}

@end
