//
//  MedicationPageViewController.m
//  MSPatient
//
//  Generated by AnyPresence, Inc on 2013-02-26
//  Copyright (c) 2013. All rights reserved.
//

#import <APSDK/AuthManager.h>
#import <APSDK/PatientTreatment+Remote.h>
#import <APSDK/PatientTreatment.h>
#import <APSDK/Medication.h>
#import <APSDK/User.h>
#import <APSDK/MissingTreatmentReason.h>
#import "AuthManager+Rules.h"
#import "LoadingTableViewCell.h"
#import "MedicationPageViewController.h"
#import "UIView+APViewExtensions.h"
#import "UIViewController+UI.h"
#import "ContentCell.h"
#import "EditMedicationPageViewController.h"
#import <APSDK/APObject+Remote.h>
#import <APSDK/APObject+RemoteRelationships.h>
#import "PikConstants.h"



@interface MedicationPageViewController ()


- (IBAction)addMedicationButtonTapped;
- (void)reloadMedicationPageDataAnimated:(BOOL)animated;


@end

@implementation MedicationPageViewController



#pragma mark - Actions

- (IBAction)addMedicationButtonTapped
{
    [self.toolBar showHideToolBarInView:self.view animated:YES];
    if(self.toolBar.hidden) [self.tableView setEditing:NO animated:YES];
}

-(void)toolBarAdd{
    [self performSegueWithIdentifier:@"ShowAddMedicationPageViewController" sender:self];
    [self.toolBar hideToolBarInView:self.view animated:NO];
    [self.tableView setEditing:NO animated:YES];
}
-(void)toolBarDelete{
    [self.tableView setEditing:!self.tableView.editing animated:YES];
}
 


#pragma mark - Private

- (void)reloadMedicationPageDataAnimated:(BOOL)animated
{
    
    if ([AppDelegate hasConnectivity])
    {
 
        [self pushBusyOperation];
        [PatientTreatment query:@"my_unarchived_medications" params:nil async:^(NSArray * objects, NSError * error) {
            if (self.navigationController.topViewController == self) {
            if (error) {
                [self popBusyOperation];
                if(ERROR_CODE_401(error)) {
                    AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication] delegate];
                    [app showSessionTerminatedAlert];
                }
                else [self showMessage:[error localizedDescription] ? : @"Error"];
            }
            else{
                    [self.tableData removeAllObjects];
                    [self.tableData addObjectsFromArray:objects];
                        [self.tableView reloadData];
                
//   *****         -  iOs 8 cleanup svaz 1/16/2015
//                        [self resize:self.tableView
//                                  to:CGSizeMake(CGRectGetWidth(self.tableView.frame),
//                                                self.tableData.count * self.tableView.rowHeight)
//                            animated:animated];
//   *****         -  iOs 8 cleanup svaz 1/16/2015   -end
                        [self popBusyOperation];
                        if(!HAS_DATA){
                            [self.toolBar showToolBarInView:self.view animated:NO];
                            CGRect frame = self.view.bounds;
                            frame.origin.y += self.toolBar.frame.size.height;
                            //   HIDE TUTORIAL FOR IPAD         -  MSAA cleanup svaz 11/27/14
                            int tutorialX = 0;
                            if (IS_IPAD) {
                                tutorialX =+150;
                            }
                            
                                self.tutorialView = [[TutorialView alloc]initWithFrame:frame];
                                [self.view addSubview:self.tutorialView];
                                
                                UILabel *newLabel = [[UILabel alloc]initWithFrame:CGRectMake(30+tutorialX, 200, 300, 40)];
                                newLabel.text = @"Tap to start adding treatments";
                                newLabel.backgroundColor = [UIColor clearColor];
                                newLabel.textColor = [UIColor whiteColor];
                                [self.tutorialView addSubview:newLabel];
                                
                                Arrow *newArrow = [[Arrow alloc]init];
                                newArrow.head = CGPointMake(105+tutorialX, 5);
                                newArrow.tail = CGPointMake(105+tutorialX, 200);
                                [self.tutorialView addArrow:newArrow];
                            
                        }
                        
            }
            } else [self popBusyOperation];
        }];
    }
    else
    {
        [AppDelegate showNoConnecttivityAlert];
    }
}


#pragma mark - UITableViewDataSource

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    //            - ios cleanup svaz 1/20/15
//    return 44.0;
    return kRowHeight;
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView == self.tableView) {
        if (indexPath.section == 1) {
            LoadingTableViewCell * cell = (LoadingTableViewCell *)[tableView dequeueReusableCellWithIdentifier:@"Loading"];
            
            if (self.listDataState == kDataStateLoading) {
                cell.state = kLoadingTableViewCellStateBusy;
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
            } else {
                cell.state = kLoadingTableViewCellStateReady;
                cell.selectionStyle = UITableViewCellSelectionStyleGray;
            }
            
            return cell;
        }
        else {
            ContentCell * cell = [tableView dequeueReusableCellWithIdentifier:@"Default"];
            PatientTreatment * object = [self.tableData objectAtIndex:indexPath.row];
            cell.contentLabel.text = @""; // Reset to avoid showing cached data
            if(object.medicationDenormalized != nil && [object.medicationDenormalized length] > 0) cell.contentLabel.text = object.medicationDenormalized;
            cell.accessoryType =  UITableViewCellAccessoryDisclosureIndicator;
            
            return cell;
        }
    }
    
    return nil;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.tableData.count;
}
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

#pragma mark - UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView == self.tableView) {
        if (indexPath.section == 1 && self.listDataState == kDataStateReady) {
            ((LoadingTableViewCell *)[tableView cellForRowAtIndexPath:indexPath]).state = kLoadingTableViewCellStateBusy;
            [tableView deselectRowAtIndexPath:indexPath animated:YES];
            
            self.listDataState = kDataStateLoading;
            [self reloadMedicationPageDataAnimated:YES];
        }
        
        else {
            
            PatientTreatment * treatment = [self.tableData objectAtIndex:indexPath.row];

            [self performSegueWithIdentifier:@"ShowUpdateMedicationPageViewController" sender:treatment];

        }
    }
}

- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView
           editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return UITableViewCellEditingStyleDelete;
}

- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        
        
        if ([AppDelegate hasConnectivity])
        {
            PatientTreatment * patientTreatment = [self.tableData objectAtIndex:indexPath.row];
            
            patientTreatment.archived = @1;//true
            [self pushBusyOperation];
            __unsafe_unretained MedicationPageViewController * _self = self;
            
            [patientTreatment updateAsync:^(id obj, NSError * error) {
                if (error) {
                    [_self popBusyOperation];
                    if(ERROR_CODE_401(error)) {
                        AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication] delegate];
                        [app showSessionTerminatedAlert];
                    }
                    else [_self showMessage:@"Medication failed to delete."];
                } else {
                    [_self popBusyOperation];
                    
                    //[_self showMessage:@"Medication successfully deleted."];
                    [_self.tableData removeAllObjects];
                    [_self reloadMedicationPageDataAnimated:NO];
                }
            }];
        }
        else
        {
            [AppDelegate showNoConnecttivityAlert];
        }
    }
}


#pragma mark - UIViewController

- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    if ([segue.identifier isEqualToString:@"ShowUpdateMedicationPageViewController"]) {
        ((EditMedicationPageViewController *)segue.destinationViewController).patientTreatment = sender;
        ((EditMedicationPageViewController *)segue.destinationViewController).editMode = YES;
    }
    else if ([segue.identifier isEqualToString:@"ShowAddMedicationPageViewController"]) {
        EditMedicationPageViewController *controller = (EditMedicationPageViewController *)[((UINavigationController *)segue.destinationViewController).viewControllers objectAtIndex:0];
        controller.editMode = NO;
    }
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    self.navigationItem.title = [AppDelegate interpolateString:NSLocalizedString(@"My Medications", @"My Medications")];
    
    //            -  iPad cleanup rvera 4/27/15
    self.tableView.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;
    self.tableView.frame = self.view.bounds;
    //        end     -  iPad cleanup rvera 4/27/15

}


- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self addObservers];
    
    //[self refreshAnimated:animated];
        
    [self reloadMedicationPageDataAnimated:animated];
}



@end
