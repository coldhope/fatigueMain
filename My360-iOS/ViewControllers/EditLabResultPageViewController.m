//
//  EditLabResultPageViewController.m
//  MSPatient
//
//  Generated by AnyPresence, Inc on 2013-02-26
//  Copyright (c) 2013. All rights reserved.
//

#import <APSDK/AuthManager.h>
#import <APSDK/PatientLabResult+Remote.h>
#import <APSDK/User.h>
#import "AuthManager+Rules.h"
#import "EditLabResultPageViewController.h"
#import "MBProgressHUD.h"
#import "UIViewController+UI.h"
#import "TestTypeViewController.h"
#import "UIColor+APColorExtension.h"
#import "NSDate+APDateExtension.h"
#import <APSDK/APObject+Remote.h>
#import "PikConstants.h"
#import <APSDK/APObject+RemoteRelationships.h>
#import "LabResultsListViewController.h"
#import "ConfigurationManager.h"
#import "DCRoundSwitch.h"

@interface EditLabResultPageViewController () < UIPickerViewDelegate, UIPickerViewDataSource>

@property (nonatomic, strong) DCRoundSwitch * clinicianOfficeSwitch;
@property (nonatomic, strong) DCRoundSwitch * hospitalOfficeSwitch;
@property (nonatomic, weak) IBOutlet UITextField * labResultOnTextField;
@property (nonatomic, weak) IBOutlet UITextField * labResultStatusIdTextField;
@property (nonatomic, weak) IBOutlet UITextField * testTypeIdTextField;

@property (nonatomic, strong, readonly) UIPickerView * inputLabResultsPicker;



- (BOOL)saveTapped;
- (void)refresh;


@end



@implementation EditLabResultPageViewController
NSInteger appID;

@synthesize inputLabResultsPicker = _inputLabResultsPicker;


#pragma mark - Public

- (void)setPatientLabResult:(PatientLabResult *)patientLabResult {
    if (_patientLabResult != patientLabResult) {
        _patientLabResult = patientLabResult;
        
        if ([self isViewLoaded])
            [self refresh];
    }
}


- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self.tableView deselectRowAtIndexPath:[self.tableView indexPathForSelectedRow] animated:YES];
}


#pragma mark - Actions

- (BOOL)saveTapped
{
    
    //Nothing Changed, Don't Save
    if (!((LabResultsListViewController *)self.delegate).reloadDataOnLoad)return true;
    
    if (self.testTypeIdTextField.text.length == 0) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Error!" message:@"A test type is required." delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
        [alert show];
        return false;
        
    }
    else if (self.labResultOnTextField.text.length == 0) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Error!" message:@"A date is required." delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
        [alert show];
        return false;
        
    }
    else if([[[self configureDateFormatter:self.dateFormatter field:self.labResultOnTextField] dateFromString:self.labResultOnTextField.text] compare: [NSDate date]] == NSOrderedDescending && [self.labResultStatusIdTextField.text isEqualToString:@"Complete"]){
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Error!" message:@"You can not have a complete result for a date in the future." delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
        [alert show];
        return false;
    }

    if (self.editMode) {
        self.patientLabResult.clinicianOffice = [NSNumber numberWithBool:self.clinicianOfficeSwitch.on];
         //  Added per email 7/3/14 on adding "At Hospital" to storyboard          - svaz 7/3/14
        if ( appID == MS){
           self.patientLabResult.hospital = [NSNumber numberWithBool:self.hospitalOfficeSwitch.on];
        }
        
        self.patientLabResult.labResultOn = [[self configureDateFormatter:self.dateFormatter field:self.labResultOnTextField] dateFromString:self.labResultOnTextField.text];
        self.patientLabResult.labResultStatId = self.labResultStatus.id;
        self.patientLabResult.testType = self.testType;
        
        [self pushBusyOperation];
        NSError *err = nil;
        [self.patientLabResult update:&err];
        [self popBusyOperation];
        if(err){
            if(ERROR_CODE_401(err)) {
                AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication] delegate];
                [app showSessionTerminatedAlert];
            }
            else [self showMessage:@"Lab Result/Test record failed to save."];
             return false;
        }
        else {
            
        }
    }
    else {
        PatientLabResult * patientLabResult = [PatientLabResult new];
        patientLabResult.patientId = ((User *)[AuthManager defaultManager].currentCredentials).id;
        patientLabResult.clinicianOffice = [NSNumber numberWithBool:self.clinicianOfficeSwitch.on];
        
         //  Added per email 7/3/14 on adding "At Hospital" to storyboard          - svaz 7/3/14
        if ( appID == MS){
            patientLabResult.hospital = [NSNumber numberWithBool:self.hospitalOfficeSwitch.on];

        }
        
        patientLabResult.labResultOn = [[self configureDateFormatter:self.dateFormatter field:self.labResultOnTextField] dateFromString:self.labResultOnTextField.text];
        
        patientLabResult.labResultStatId = self.labResultStatus.id;;
        
        TestType *tt = [TestType new];
        tt.id = self.testType.id;
        //tt.category = self.testType.category; //RV New lable on API for SymtomsCat and TestTypeCat comented 6/8/15
        tt.testTypeCat = self.testType.testTypeCat;
        tt.inactive = self.testType.inactive;
        tt.name = self.testType.name;
        patientLabResult.testType = tt;
        
        
        [self pushBusyOperation];
      
        
      
        
//        [patientLabResult createAsync:<#^(id object, NSError *error)callback#>
        
        [patientLabResult createAsync:^(id obj, NSError * error) {
            if (error) {
                [self popBusyOperation];
                if(ERROR_CODE_401(error)) {
                    AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication] delegate];
                    [app showSessionTerminatedAlert];
                }
                else [self showMessage:@"Lab result/test record failed to add."];
            } else {
//                [self popBusyOperation];
                //[_self showMessage:@"Alerts record successfully saved."];
                NSLog(@"Success  " );
                [self dismissViewControllerAnimated:YES completion:nil];
            }
        }];
        
        
        
        
        
        
//          NSError *err = nil;
//        [patientLabResult create:&err];
//        if (err) {
//            if(ERROR_CODE_401(err)) {
//                AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication] delegate];
//                [app showSessionTerminatedAlert];
//            }
//            else {
//             [self showMessage:@"Lab result/test record failed to add."];
//                NSLog(@"ERROR %@", err);
//            }
//        } else {            
//            //[_self showMessage:@"Lab result/test record successfully added."];
//            //[_self.navigationController popViewControllerAnimated:YES];
////            [self dismissViewControllerAnimated:YES completion:nil];
//            
//        }
    }
    [self popBusyOperation];
    return true;
}



- (UIPickerView *)inputLabResultsPicker {
    if (!_inputLabResultsPicker) {
        _inputLabResultsPicker = [[UIPickerView alloc] initWithFrame:CGRectZero];
        
        _inputLabResultsPicker.delegate = self;
        _inputLabResultsPicker.dataSource = self;
        _inputLabResultsPicker.showsSelectionIndicator = YES;
        
        [_inputLabResultsPicker sizeToFit];
    }
    
    return _inputLabResultsPicker;
}


- (void)testTypeSelected:(NSNotification *) notification
{
    [self.delegate userInteractedWithViewController:self];
    if ([[notification name] isEqualToString:@"selectedTestType"]){
        
        [self.navigationController popViewControllerAnimated:YES];
        
        NSDictionary *userInfo = notification.userInfo;
        
        self.testType = [userInfo objectForKey:@"testType"];
        self.testTypeIdTextField.text = self.testType.name;
        
        [self.tableView reloadData];
    }
}


#pragma mark - Private
- (void)refresh
{
    
    AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication]delegate];
    for (LabResultStat *labResultStatus in ad.labResultStatusData) {
        if ([labResultStatus.id intValue] == [self.patientLabResult.labResultStatId intValue]) {
            self.labResultStatus = labResultStatus;
            break;
        }
    }
    
    for (TestType *testType in ad.testTypeData) {
        if ([testType.id intValue] == [self.patientLabResult.testTypeId intValue]) {
            self.testType = testType;
            break;
        }
    }
    self.clinicianOfficeSwitch.on = [self.patientLabResult.clinicianOffice boolValue];
    
     //  Added per email 7/3/14 on adding "At Hospital" to storyboard          - svaz 7/3/14
    if ( appID == MS){
        self.hospitalOfficeSwitch.on = [self.patientLabResult.hospital boolValue];
    }
    
    self.labResultOnTextField.text = [[self configureDateFormatter:[self dateFormatterWithTimeZone:[NSTimeZone timeZoneWithAbbreviation:@"UTC"]] field:self.labResultOnTextField] stringFromDate:self.patientLabResult.labResultOn];
    self.labResultStatusIdTextField.text = self.labResultStatus.name;
    self.testTypeIdTextField.text = self.testType.name;
    self.navigationController.navigationBar.userInteractionEnabled = true;
}


#pragma mark - UITextFieldDelegate
- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField {
    [self.delegate userInteractedWithViewController:self];
    if (textField.tag == kFormViewControllerFieldDate) {
        if (textField.text.length > 0) {
            NSDateFormatter * formatter = [self configureDateFormatter:self.dateFormatter field:textField];
            self.inputViewDatePicker.date = [formatter dateFromString:textField.text];
        }
        else {
            NSDateFormatter * formatter = [self configureDateFormatter:self.dateFormatter field:textField];
            textField.text = [formatter stringFromDate:self.inputViewDatePicker.date];
        }
            //PopUp for unsureDate added globally --rvera 10/3/14
            [self buttonPressedLabDateMsg];
            self.inputViewDatePicker.datePickerMode = UIDatePickerModeDate;
        }
    
    if (textField.tag == kFormViewControllerFieldNumber) {
        if (textField.text.length > 0) {
            AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication]delegate];
            NSInteger row = [ad.labResultStatusData indexOfObject:self.labResultStatus];
            [self.inputLabResultsPicker selectRow:row inComponent:0 animated:YES];
        }
        else {
            //set default
            AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication]delegate];
            self.labResultStatus = [ad.labResultStatusData objectAtIndex:0];
            textField.text = self.labResultStatus.name;
        }
    }
    
    return YES;
}



#pragma mark - PickerView delegate

-(NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView
{
    
    return 1;
}


-(NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component
{
    AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication]delegate];
    return ad.labResultStatusData.count;
}


-(NSString*)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component
{
    AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication]delegate];
    LabResultStat *labResultStatus = [ad.labResultStatusData objectAtIndex:row];
    return labResultStatus.name;
}


- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component
{
    AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication]delegate];
    self.labResultStatus = [ad.labResultStatusData objectAtIndex:row];
    self.labResultStatusIdTextField.text = self.labResultStatus.name;
    [self.delegate userInteractedWithViewController:self];
}


#pragma mark - UIViewController
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    
    if ([segue.identifier isEqualToString:@"TestTypeSegue"])
    {
        TestTypeViewController *controller = (TestTypeViewController *)[segue destinationViewController];
        AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication]delegate];
        controller.tableData = ad.testTypeData;
    }
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    
     //  Added per email 7/3/14 on adding "At Hospital" to storyboard          - svaz 7/3/14
    appID = [[[ConfigurationManager sharedManager] appID] integerValue];
    
    self.navigationItem.title = @"My Lab Result/Test";
    
    //Added only to MDD app requested by trello. - rvera 12/16/14
    if ( appID == MDD){
        [self LabResultMsg];
    }
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(testTypeSelected:) name:@"selectedTestType" object:nil];
    int yVal = ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7.0) ? 128 : 108;
    self.clinicianOfficeSwitch = [[DCRoundSwitch alloc]initWithFrame:CGRectMake(210, yVal, 79, 27)];
    [self.view addSubview:self.clinicianOfficeSwitch];
    self.clinicianOfficeSwitch.onText = @"YES";
    self.clinicianOfficeSwitch.offText = @"NO";
    self.clinicianOfficeSwitch.onTintColor = [UIColor darkBlue];
    [self.clinicianOfficeSwitch addTarget:self action:@selector(userInteraction) forControlEvents:UIControlEventValueChanged];
    
     //  Added per email 7/3/14 on adding "At Hospital" to storyboard          - svaz 7/3/14
    if (   appID == MS){
        int yVal2 = ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7.0) ? 175 : 138;
        self.hospitalOfficeSwitch = [[DCRoundSwitch alloc]initWithFrame:CGRectMake(210, yVal2, 79, 27)];
        [self.view addSubview:self.hospitalOfficeSwitch];
        self.hospitalOfficeSwitch.onText = @"YES";
        self.hospitalOfficeSwitch.offText = @"NO";
        self.hospitalOfficeSwitch.onTintColor = [UIColor darkBlue];
        [self.hospitalOfficeSwitch addTarget:self action:@selector(userInteraction ) forControlEvents:UIControlEventValueChanged];
    
    }
    //  *** End Added - svaz
    
    
    
    self.labResultOnTextField.tag = kFormViewControllerFieldDate;
    self.labResultStatusIdTextField.tag = kFormViewControllerFieldNumber;
    self.labResultOnTextField.placeholder = kFieldPlaceHolderText;
    self.labResultStatusIdTextField.placeholder = kFieldPlaceHolderText;
    self.fields = @[ self.labResultOnTextField, self.labResultStatusIdTextField ];
    
    for (UITextField * field in self.fields) {
        field.inputAccessoryView = self.inputAccessoryViewToolbar;
        
        if (field.tag == kFormViewControllerFieldDate) {
            field.inputView = self.inputViewDatePicker;
        }
        
        if (field.tag  == kFormViewControllerFieldNumber){
            field.inputView = self.inputLabResultsPicker;
        }
    }
    
    [self refresh];
    
    if (!self.editMode) {
        AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication]delegate];
        self.testType = [ad.testTypeData objectAtIndex:0];
        
    }
}

-(void)userInteraction {
    [self.delegate userInteractedWithViewController:self];
}

-(void)back{
    if([self saveTapped]) [super back];
    else return;
}

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"selectedTestType" object:nil];
    
}

//added globally for unsureLabDate --rvera 10/3/14
- (IBAction)buttonPressedLabDateMsg{
    UIAlertView *alertMsg = [[UIAlertView alloc]initWithTitle: nil // @"ALERT!"
                                                      message: @"“If unsure of date, enter an estimated date.”"
                                                     delegate: nil
                                            cancelButtonTitle:@"OK"
                                            otherButtonTitles:nil];
    [alertMsg show];
    NSLog(@"Button Pressed Message Tapped");
}


//Only for MDD -rvera 12/16/14
- (IBAction)LabResultMsg{
    UIAlertView *alertMsg = [[UIAlertView alloc]initWithTitle: nil // @"ALERT!"
                                                      message: @"“Note that decisions about tests are made on a case by case basis. There is no standard battery of tests indicated for the initial assessment of a person with depression.”"
                                                     delegate: nil
                                            cancelButtonTitle:@"OK"
                                            otherButtonTitles:nil];
    [alertMsg show];
    NSLog(@"Button Pressed Message Tapped");
}


@end
