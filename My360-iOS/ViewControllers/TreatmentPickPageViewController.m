//
//  TreatmentListPageViewController.m
//  MSPatient
//
//  Generated by AnyPresence, Inc on 2013-03-02
//  Copyright (c) 2013. All rights reserved.
//

#import <APSDK/AuthManager.h>
#import <APSDK/PatientTreatment+Remote.h>
#import <APSDK/User.h>
#import <APSDK/MissingTreatmentReason.h>
#import "AuthManager+Rules.h"
#import "LoadingTableViewCell.h"
#import "MBProgressHUD.h"
#import "TreatmentPickPageViewController.h"
#import "UIView+APViewExtensions.h"
#import "UIViewController+UI.h"
#import "UpdateTreatmentPageViewController.h"
#import "DatedContentCell.h"
#import "UIColor+APColorExtension.h"
//#import "APNavigationController.h"
#import <APSDK/APObject+Remote.h>
#import "EditAdherencePageViewController.h"
#import "ChartsListViewController.h"
#import "ChartDateListViewController.h"
#import "HomePageViewController.h"
#import <APSDK/APObject+RemoteRelationships.h>




@interface TreatmentPickPageViewController ()

@property (nonatomic, weak) IBOutlet UIBarButtonItem * addTreatmentButtonBarButtonItem;

- (IBAction)addTreatmentButtonTapped;
- (void)reloadTreatmentListPageDataAnimated:(BOOL)animated;

@end

@implementation TreatmentPickPageViewController
@synthesize reloadDataOnLoad;
@synthesize chartId;


#pragma mark - Actions

- (IBAction)addTreatmentButtonTapped {
    [self.toolBar showHideToolBarInView:self.view animated:YES];
    if(self.toolBar.hidden) [self.tableView setEditing:NO animated:YES];
}

-(void)toolBarAdd{
    [self performSegueWithIdentifier:@"ShowAddTreatmentPageViewController" sender:self];
    [self.toolBar hideToolBarInView:self.view animated:NO];
    [self.tableView setEditing:NO animated:YES];
    [self.tutorialView dismissViewAnimated:NO completion:nil];
}
-(void)toolBarDelete{
    [self.tableView setEditing:!self.tableView.editing animated:YES];
}

#pragma mark - Private


-(void)sortData
{
    self.sectionedTableData = [[NSMutableDictionary alloc] init];
    
    BOOL found;
    
    for (PatientTreatment *treatment in self.tableData) {
        found = NO;
        //see if we already have the category
        NSNumber *treatmentTypeId = treatment.treatmentTypeId;
        NSString *category = [[NSString alloc]init];
        AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication]delegate];
        for(TreatmentType *tt in ad.treatmentTypeData){
            if([treatmentTypeId isEqualToNumber:tt.id]){
                category = [tt.sortId stringValue];
                break;
            }
        }
        
        for (NSString *sectionLabel in [self.sectionedTableData allKeys]) {
            if ([sectionLabel isEqualToString:category]) {
                found = YES;
                break;
            }
        }
        //category was not found so create a new array for it
        if (!found) {
            [self.sectionedTableData setValue:[[NSMutableArray alloc] init] forKey:category];
            
        }
        
        [[self.sectionedTableData objectForKey:category] addObject:treatment];
    }
    
    // Sort each section array
    for (NSString *key in [self.sectionedTableData allKeys])
    {
        NSSortDescriptor *treatmentSortDescriptor = [[NSSortDescriptor alloc] initWithKey:@"treatmentTypeDenormalized" ascending:YES];
        NSSortDescriptor *nameSortDescriptor = [[NSSortDescriptor alloc] initWithKey:@"medicationDenormalized" ascending:YES];
        NSArray *sortDescriptors = @[treatmentSortDescriptor,nameSortDescriptor];
        [[self.sectionedTableData objectForKey:key] sortUsingDescriptors:sortDescriptors];
    }
    [self.tableView reloadData];

}


- (void)reloadTreatmentListPageDataAnimated:(BOOL)animated
{
    
    if ([AppDelegate hasConnectivity])
    {
        [self pushBusyOperation];
        [self loadDataFromAppDelegate];
        [PatientTreatment query:@"my_unarchived_treatments" params:nil async:^(NSArray * objects, NSError * error) {
            if (self.navigationController.topViewController == self) {
            if (error) {
                [self popBusyOperation];
                if(ERROR_CODE_401(error)) {
                    AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication] delegate];
                    [app showSessionTerminatedAlert];
                }
                else [self showMessage:[error localizedDescription] ? : @"Error"];
            }
            else{
                [self.tableData removeAllObjects];
                
                [self.tableData addObjectsFromArray:objects];
                    
                [self sortData];
                [self.tableView reloadData];
//            - ios cleanup svaz 1/12/15
//                [self resize:self.tableView
//                                  to:CGSizeMake(CGRectGetWidth(self.tableView.frame),
//                                                self.tableData.count * self.tableView.rowHeight + [self numberOfSectionsInTableView:self.tableView] * 24)
//                            animated:animated];
//   *****         -  iOs 8 cleanup svaz 1/16/2015   -end
                
                [self popBusyOperation];
            }
            } else [self popBusyOperation];
            
        }];
    }
    else
    {
        [AppDelegate showNoConnecttivityAlert];
    }
}


#pragma mark - UITableViewDataSource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [[self.sectionedTableData valueForKey:[[[self.sectionedTableData allKeys] sortedArrayUsingSelector:@selector(localizedCaseInsensitiveCompare:)] objectAtIndex:section]] count];
}

 
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView == self.tableView) {
        DatedContentCell * cell = [tableView dequeueReusableCellWithIdentifier:@"Default"];
        
        PatientTreatment * object = [[self.sectionedTableData valueForKey:[[[self.sectionedTableData allKeys] sortedArrayUsingSelector:@selector(localizedCaseInsensitiveCompare:)] objectAtIndex:indexPath.section]] objectAtIndex:indexPath.row];
        NSString *dateString = [[self dateFormatterWithTimeZone:[NSTimeZone timeZoneWithAbbreviation:@"UTC"]] stringFromDate:object.startOn];
        cell.dateLabel.text =  dateString;
        //Medication has a leading space so that it sorts to the top of the listing
        cell.contentLabel.text =  [object.treatmentTypeId isEqualToNumber:@1] ? object.medicationDenormalized : object.treatmentScheduleDenormalized;
        
        cell.accessoryType =  UITableViewCellAccessoryDisclosureIndicator;
        cell.selectionStyle = UITableViewCellSelectionStyleGray;
        
        return cell;
    }
    
    return nil;
}


- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return [[self.sectionedTableData allKeys] count];
}


#pragma mark - UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if (tableView == self.tableView) {
        
        PatientTreatment *treatment = [[self.sectionedTableData valueForKey:[[[self.sectionedTableData allKeys] sortedArrayUsingSelector:@selector(localizedCaseInsensitiveCompare:)] objectAtIndex:indexPath.section]] objectAtIndex:indexPath.row];
        if([[self.navigationController.viewControllers objectAtIndex:0] class] == [HomePageViewController class]){
            [self performSegueWithIdentifier:@"ChartsView" sender:treatment];
        }
        else {
            [self performSegueWithIdentifier:@"ShowAddAdherence" sender:treatment];
        }
        
    }
}


- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView *headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 24)];
    headerView.backgroundColor = [UIColor darkBlue];
    
    UILabel *sectionTitle = [[UILabel alloc] initWithFrame:CGRectMake(50, 2, 320, 20)];
    sectionTitle.textColor = [UIColor whiteColor];
    sectionTitle.backgroundColor = [UIColor clearColor];
    /*sectionTitle.text = [[[self.sectionedTableData allKeys] sortedArrayUsingSelector:@selector(localizedCaseInsensitiveCompare:)] objectAtIndex:section];*/
    
    AppDelegate *ad = (AppDelegate *)[[UIApplication sharedApplication]delegate];
    NSString * sortId = [[[self.sectionedTableData allKeys] sortedArrayUsingSelector:@selector(localizedCaseInsensitiveCompare:)] objectAtIndex:section];
    NSNumberFormatter * f = [[NSNumberFormatter alloc] init];
    [f setNumberStyle:NSNumberFormatterDecimalStyle];
    for(TreatmentType *tt in ad.treatmentTypeData){
        if([[f numberFromString:sortId] isEqualToNumber:tt.sortId])
        {
            sectionTitle.text = tt.name;
            break;
        }
    }
    
    [headerView addSubview:sectionTitle];
    
    return headerView;
}


- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    
    return 24;
}

- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView
           editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath
{
        return UITableViewCellEditingStyleDelete;
}

- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        
        if ([AppDelegate hasConnectivity])
        {
            PatientTreatment * patientTreatment = [[self.sectionedTableData valueForKey:[[[self.sectionedTableData allKeys] sortedArrayUsingSelector:@selector(localizedCaseInsensitiveCompare:)] objectAtIndex:indexPath.section]] objectAtIndex:indexPath.row];
            
            
            patientTreatment.archived = @1;//true
            [self pushBusyOperation];
            __unsafe_unretained TreatmentPickPageViewController * _self = self;

            [patientTreatment updateAsync:^(id obj, NSError * error) {
                if (error) {
                    [_self popBusyOperation];
                    if(ERROR_CODE_401(error)) {
                        AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication] delegate];
                        [app showSessionTerminatedAlert];
                    }
                    else [_self showMessage:@"Treatment record failed to delete."];
                } else {
                    [_self popBusyOperation];
                    //[_self showMessage:@"Treatment record successfully deleted."];
                    [UIView transitionWithView: self.tableView
                                      duration: 0.35f
                                       options: UIViewAnimationOptionTransitionCrossDissolve
                                    animations: ^(void)
                     {
                         [_self reloadTreatmentListPageDataAnimated:YES];
                     }
                                    completion: ^(BOOL isFinished)
                     {
                     }];
                }
            }];
        }
        else
        {
            [AppDelegate showNoConnecttivityAlert];
        }
    }
}



#pragma mark - UIViewController

- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    
    if ([segue.identifier isEqualToString:@"ShowAddAdherence"]) {
        ((EditAdherencePageViewController *)segue.destinationViewController).patientTreatment = sender;
        ((EditAdherencePageViewController *)segue.destinationViewController).editMode = NO;
        
    }
    else if ([segue.identifier isEqualToString:@"ChartsView"]) {
        ((ChartDateListViewController *)segue.destinationViewController).patientTreatment = (PatientTreatment *)sender;
        ((ChartDateListViewController *)segue.destinationViewController).chartId = self.chartId;
    }
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    self.navigationItem.title = [AppDelegate interpolateString:NSLocalizedString(@"Select Treatment", @"Select Treatment")];
    reloadDataOnLoad = YES;
    
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(closeButtonTapped:)
                                                 name:@"adherenceAdded"
                                               object:nil];
    
}


- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self addObservers];
    //[((APNavigationController *)self.navigationController) removeAlert];
    if(reloadDataOnLoad){
        [self refreshAnimated:animated];
        [self reloadTreatmentListPageDataAnimated:animated];
        reloadDataOnLoad = NO;
    }
}


#pragma mark - Data

-(void)userInteractedWithViewController:(UpdateTreatmentPageViewController *)controller {
    self.reloadDataOnLoad = YES;
}
-(IBAction)closeButtonTapped:(id)sender {
//    [self dismissModalViewControllerAnimated:YES];  - elimanated -svaz 9/4/14
    [self dismissViewControllerAnimated:NO completion:nil];
}

-(void)loadDataFromAppDelegate {
    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    if (![appDelegate finishedLoadingReferenceData]) {
        //[appDelegate loadReferenceData];
    }
    
}

@end
